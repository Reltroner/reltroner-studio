{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\r\nimport rehypePrettyCode from \"rehype-pretty-code\";\r\nimport remarkGfm from \"remark-gfm\";\r\n\r\nconst Blog = defineDocumentType(() => ({\r\n  name: \"Blog\",\r\n  filePathPattern: `blog/*.md`,\r\n  contentType: \"markdown\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n    description: { type: \"string\", required: false },\r\n    date: { type: \"date\", required: false },\r\n    slug: { type: \"string\", required: false },\r\n    image: { type: \"string\", required: false },\r\n    author: { type: \"string\", required: false },\r\n    published: { type: \"boolean\", required: false },\r\n  },\r\n}));\r\n\r\nconst Character = defineDocumentType(() => ({\r\n  name: \"Character\",\r\n  filePathPattern: `characters/*.md`,\r\n  contentType: \"markdown\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n    description: { type: \"string\", required: false },\r\n    author: { type: \"string\", required: false },\r\n    published: { type: \"boolean\", required: false },\r\n    image: { type: \"string\", required: false },\r\n    date: { type: \"date\", required: false },\r\n  },\r\n}));\r\n\r\nconst Culture = defineDocumentType(() => ({\r\n  name: \"Culture\",\r\n  filePathPattern: `cultures/*.md`,\r\n  contentType: \"markdown\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n    description: { type: \"string\", required: false },\r\n    author: { type: \"string\", required: false },\r\n    published: { type: \"boolean\", required: false },\r\n    image: { type: \"string\", required: false },\r\n    date: { type: \"date\", required: false },\r\n  },\r\n}));\r\n\r\nconst Event = defineDocumentType(() => ({\r\n  name: \"Event\",\r\n  filePathPattern: `events/*.md`,\r\n  contentType: \"markdown\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n    description: { type: \"string\", required: false },\r\n    author: { type: \"string\", required: false },\r\n    published: { type: \"boolean\", required: false },\r\n    image: { type: \"string\", required: false },\r\n    date: { type: \"date\", required: false },\r\n  },\r\n}));\r\n\r\nconst Organization = defineDocumentType(() => ({\r\n  name: \"Organization\",\r\n  filePathPattern: `organizations/*.md`,\r\n  contentType: \"markdown\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n  },\r\n}));\r\n\r\nconst Place = defineDocumentType(() => ({\r\n  name: \"Place\",\r\n  filePathPattern: `places/*.md`,\r\n  contentType: \"markdown\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n  },\r\n}));\r\n\r\nconst Series = defineDocumentType(() => ({\r\n  name: \"Series\",\r\n  filePathPattern: `series/*.md`,\r\n  contentType: \"markdown\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n  },\r\n}));\r\n\r\nconst Statistic = defineDocumentType(() => ({\r\n  name: \"Statistic\",\r\n  filePathPattern: `statistics/*.md`,\r\n  contentType: \"markdown\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n  },\r\n}));\r\n\r\nexport default makeSource({\r\n  contentDirPath: \"content\",\r\n  documentTypes: [\r\n    Blog,\r\n    Character,\r\n    Culture,\r\n    Event,\r\n    Organization,\r\n    Place,\r\n    Series,\r\n    Statistic,\r\n  ],\r\n  markdown: {\r\n    remarkPlugins: [remarkGfm],\r\n    //rehypePlugins: [rehypePrettyCode],\r\n  },\r\n  disableImportAliasWarning: true,\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
