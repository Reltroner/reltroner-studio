{
  "cacheItemsMap": {
    "blog/external-creator-handbook.md": {
      "document": {
        "title": "Reltroner Studio – External Creator Handbook",
        "description": "A concise PDF guide for external collaborators seeking to contribute within the Asthortera universe under Reltroner Studio.",
        "date": "2025-03-28T00:00:00.000Z",
        "body": {
          "raw": "\n# 📘 External Creator Handbook\n## Reltroner Studio – Asthortera Universe Access Guide\n\nWelcome to the gateway of **Reltroner Studio** — where storytelling transcends fiction and becomes a blueprint for meaning, resistance, and consciousness. This handbook is designed to onboard external creators who wish to contribute within the **Asthortera universe** while respecting the sacred balance of **Nytherion Abyss** and **Astralis Pinnacle**.\n\n---\n\n## 🔑 1. Access Philosophy\nExternal creation is allowed under strict alignment with:\n- **Asthortera-only world setting** (no real-world or unrelated fictional use)\n- **Nytherion–Astralis philosophy**\n- **Integrity of canon and tone**\n\n> “Asthortera is not a sandbox — it is a spiritual, cultural, and narrative ecosystem.”\n\n---\n\n## 📋 2. Certification Steps\n\n### 🧩 Step 1: Application\n- 1-page pitch: premise, setting, relevance to Abyss or Astralis\n- Statement of why Asthortera is essential to your story\n\n### 🧠 Step 2: Canon Review\n- Conducted by Lore Architect / Canon Council\n- Evaluation of philosophical clarity and lore compatibility\n\n### ✍️ Step 3: Creative Trial *(if requested)*\n- Submit:\n  - Short prose (max 1000 words) or\n  - Visual sample (1–3 panels, character or sigil)\n- Include personal reflection on Red Pill philosophy\n\n### ✅ Step 4: Access Granted\n- Tiered access to worldbuilding resources\n- Work labeled as \"Certified Reltroner Story (CRS)\"\n- 6–12 months valid, renewable\n\n### 🛡️ Step 5: Final Audit\n- Post-creation review\n- Canon classification: A-Class, B-Class, C-Class, or Non-Canon\n\n---\n\n## 🧭 3. Canon Class Overview\n\n| Tier | Classification | Influence | Notes |\n|------|----------------|-----------|-------|\n| 🟢 | S-Class (Core Canon) | Full | Architect-written or directed |\n| 🔵 | A-Class (Verified Canon) | Major | Inner Circle creators only |\n| 🟡 | B-Class (Semi-Canon) | Limited | CRS-level stories with potential upgrade |\n| 🟠 | C-Class (Parallel) | None | \"What if\" or thematic |\n| 🔴 | Non-Canon | None | Misaligned or rule-breaking |\n\n> ❗All works must state their Canon Tier visibly.\n\n---\n\n## 🔒 4. Boundaries & Restrictions\n\n- ❌ No use of Asthortera symbols, rituals, or names (e.g. “Nytherion Abyss”, “Astralis Pinnacle”) in non-Asthroterran settings\n- ❌ No transformation of mythos into real-world commentary, parody, or political metaphor\n- ❌ No unauthorized merchandise, NFT, or commodified reuse\n\nViolation = **license revocation + IP infringement process**.\n\n---\n\n## 📬 5. Contact & Submission\n- All applications go to: [collab@reltroner.com](comming soon)\n- Allow 7–14 days for review\n- Emergency questions: contact Lore Verification Officer via internal channel (if granted)\n\n---\n\n## ✨ Closing Words\nWe believe in creators who fight illusion with clarity, and fiction with purpose. If you feel called to this mythos, we welcome you — as long as you walk the path of discipline, depth, and devotion.\n\n**Let Astralis light the unknown.**\n\n---\n\n🔙 Back to [Blog](https://www.reltroner.com/blog)\n<div style=\"margin-top: 3rem; display: flex; gap: 1rem; flex-wrap: wrap;\">\n\n<a href=\"/files/external-creator-handbook.pdf\" style=\"padding: 0.75rem 1.5rem; background-color: #4A90E2; color: white; text-decoration: none; border-radius: 8px;\" target=\"_blank\">\n📄 Download PDF Version\n</a>\n\n</div>\n\n➡️ To [Creative Lore Bible](https://www.reltroner.com/blog/creative-lore-bible)",
          "html": "<h1>📘 External Creator Handbook</h1>\n<h2>Reltroner Studio – Asthortera Universe Access Guide</h2>\n<p>Welcome to the gateway of <strong>Reltroner Studio</strong> — where storytelling transcends fiction and becomes a blueprint for meaning, resistance, and consciousness. This handbook is designed to onboard external creators who wish to contribute within the <strong>Asthortera universe</strong> while respecting the sacred balance of <strong>Nytherion Abyss</strong> and <strong>Astralis Pinnacle</strong>.</p>\n<hr>\n<h2>🔑 1. Access Philosophy</h2>\n<p>External creation is allowed under strict alignment with:</p>\n<ul>\n<li><strong>Asthortera-only world setting</strong> (no real-world or unrelated fictional use)</li>\n<li><strong>Nytherion–Astralis philosophy</strong></li>\n<li><strong>Integrity of canon and tone</strong></li>\n</ul>\n<blockquote>\n<p>“Asthortera is not a sandbox — it is a spiritual, cultural, and narrative ecosystem.”</p>\n</blockquote>\n<hr>\n<h2>📋 2. Certification Steps</h2>\n<h3>🧩 Step 1: Application</h3>\n<ul>\n<li>1-page pitch: premise, setting, relevance to Abyss or Astralis</li>\n<li>Statement of why Asthortera is essential to your story</li>\n</ul>\n<h3>🧠 Step 2: Canon Review</h3>\n<ul>\n<li>Conducted by Lore Architect / Canon Council</li>\n<li>Evaluation of philosophical clarity and lore compatibility</li>\n</ul>\n<h3>✍️ Step 3: Creative Trial <em>(if requested)</em></h3>\n<ul>\n<li>Submit:\n<ul>\n<li>Short prose (max 1000 words) or</li>\n<li>Visual sample (1–3 panels, character or sigil)</li>\n</ul>\n</li>\n<li>Include personal reflection on Red Pill philosophy</li>\n</ul>\n<h3>✅ Step 4: Access Granted</h3>\n<ul>\n<li>Tiered access to worldbuilding resources</li>\n<li>Work labeled as \"Certified Reltroner Story (CRS)\"</li>\n<li>6–12 months valid, renewable</li>\n</ul>\n<h3>🛡️ Step 5: Final Audit</h3>\n<ul>\n<li>Post-creation review</li>\n<li>Canon classification: A-Class, B-Class, C-Class, or Non-Canon</li>\n</ul>\n<hr>\n<h2>🧭 3. Canon Class Overview</h2>\n<p>| Tier | Classification | Influence | Notes |\n|------|----------------|-----------|-------|\n| 🟢 | S-Class (Core Canon) | Full | Architect-written or directed |\n| 🔵 | A-Class (Verified Canon) | Major | Inner Circle creators only |\n| 🟡 | B-Class (Semi-Canon) | Limited | CRS-level stories with potential upgrade |\n| 🟠 | C-Class (Parallel) | None | \"What if\" or thematic |\n| 🔴 | Non-Canon | None | Misaligned or rule-breaking |</p>\n<blockquote>\n<p>❗All works must state their Canon Tier visibly.</p>\n</blockquote>\n<hr>\n<h2>🔒 4. Boundaries &#x26; Restrictions</h2>\n<ul>\n<li>❌ No use of Asthortera symbols, rituals, or names (e.g. “Nytherion Abyss”, “Astralis Pinnacle”) in non-Asthroterran settings</li>\n<li>❌ No transformation of mythos into real-world commentary, parody, or political metaphor</li>\n<li>❌ No unauthorized merchandise, NFT, or commodified reuse</li>\n</ul>\n<p>Violation = <strong>license revocation + IP infringement process</strong>.</p>\n<hr>\n<h2>📬 5. Contact &#x26; Submission</h2>\n<ul>\n<li>All applications go to: [collab@reltroner.com](comming soon)</li>\n<li>Allow 7–14 days for review</li>\n<li>Emergency questions: contact Lore Verification Officer via internal channel (if granted)</li>\n</ul>\n<hr>\n<h2>✨ Closing Words</h2>\n<p>We believe in creators who fight illusion with clarity, and fiction with purpose. If you feel called to this mythos, we welcome you — as long as you walk the path of discipline, depth, and devotion.</p>\n<p><strong>Let Astralis light the unknown.</strong></p>\n<hr>\n<p>🔙 Back to <a href=\"https://www.reltroner.com/blog\">Blog</a></p>\n<p>➡️ To <a href=\"https://www.reltroner.com/blog/creative-lore-bible\">Creative Lore Bible</a></p>"
        },
        "_id": "blog/external-creator-handbook.md",
        "_raw": {
          "sourceFilePath": "blog/external-creator-handbook.md",
          "sourceFileName": "external-creator-handbook.md",
          "sourceFileDir": "blog",
          "contentType": "markdown",
          "flattenedPath": "blog/external-creator-handbook"
        },
        "type": "Blog",
        "slug": "external-creator-handbook"
      },
      "documentHash": "1744044723742",
      "hasWarnings": true,
      "documentTypeName": "Blog"
    },
    "blog/fullstack-interview-summary.md": {
      "document": {
        "title": "Full Stack Developer Interview Simulation – Project Walkthrough & Security Readiness",
        "description": "A simulated technical interview showcasing project understanding, structure, logic flow, deployment, and error handling of a full stack attendance management system.",
        "date": "2025-04-03T00:00:00.000Z",
        "body": {
          "raw": "\n## Q1: Project Folder Structure\n\nThis screenshot represents the structure of my own full-stack employee management system project:\n\n- **controllers/**: For business logic (e.g., attendance, users).\n- **routes/**: Defines the endpoints that redirect to corresponding views or actions.\n- **models/**: Contains MongoDB schema structures (user, employee, manager, QRCode).\n- **public/**: For static files like images.\n- **seeds/**: Scripts to insert and reset dummy data.\n- **utils/**: Utilities like `wrapAsync`, global error middleware, and custom validators.\n- **views/**: The EJS-based UI templates (frontend visuals).\n- **app.js**: Server-side app configuration and route mounting.\n- **package.json**: Contains dependencies and CLI commands like `nodemon app.js`.\n\n## Q2: How the Attendance Flow Works\n\nIt starts from `controllers/attendance.js` where both Admin and Manager can use the `viewLog` module to view and approve employee attendance. It connects to the `models/attendance.js` to retrieve attendance schemas, then continues through `routes/attendance.js`, and finally renders in `attendance/log.ejs`. Both Admin and Manager can insert check-in/check-out times, and confirm pending attendance entries.\n\n## Q3: QR Code Flow\n\nThe logic begins in `controllers/attendance.js` → `scanQR` function. Admin/Manager generates and prints QR codes stored in `models/QRCode.js`. Routing is handled by `routes/attendance.js` and then rendered in `attendance/scan.ejs`. Each QR has a 24-hour expiration logic, preventing reuse or outdated attempts.\n\n## Q4: Role-Based Access Security\n\nAccess to the log page (`attendance/log`) is restricted by `isAuth.js` and `checkRole.js` middlewares. If any unauthorized users attempt to bypass, I’ll temporarily shut down the server and investigate. For stronger future protection, I plan to implement 2FA login and email verification.\n\n## Q5: Deployment Readiness\n\nI have previously pushed and deployed frontend projects successfully using GitHub + Vercel with a `.com` domain. While backend/full stack deployment failed earlier due to no cloud-hosted DB, I plan to allocate budget for scalable DB services like MongoDB Atlas or Supabase for smooth deployment.\n\n## Q6 & Q7: Error Handling & Security Strategy\n\nI implemented a global error handler (`errorHandler.js`) and `ExpressError` utility in `utils/`. In production environments, I plan to invest in security upgrades, scalable infrastructure, and proper alert systems. For extreme threats like DDoS attacks, I will shut down the server and audit everything from database, middleware logic, to access controls.\n\n---\n\n🛡️ This simulation represents my real project navigation, done while having the source code opened live during the interview-style practice. Every answer was formed based on my understanding and hands-on implementation.\n\n---\n\n🔙 Back to [Blog](https://www.reltroner.com/blog)\n<div style=\"margin-top: 3rem; display: flex; gap: 1rem; flex-wrap: wrap;\">\n\n<a href=\"/files/fullstack-interview-summary.pdf\" style=\"padding: 0.75rem 1.5rem; background-color: #4A90E2; color: white; text-decoration: none; border-radius: 8px;\" target=\"_blank\">\n📄 Download PDF Version\n</a>\n\n</div>\n\n➡️ To [For Recruiters & Collaborators](https://www.reltroner.com/blog/for-recruiters)",
          "html": "<h2>Q1: Project Folder Structure</h2>\n<p>This screenshot represents the structure of my own full-stack employee management system project:</p>\n<ul>\n<li><strong>controllers/</strong>: For business logic (e.g., attendance, users).</li>\n<li><strong>routes/</strong>: Defines the endpoints that redirect to corresponding views or actions.</li>\n<li><strong>models/</strong>: Contains MongoDB schema structures (user, employee, manager, QRCode).</li>\n<li><strong>public/</strong>: For static files like images.</li>\n<li><strong>seeds/</strong>: Scripts to insert and reset dummy data.</li>\n<li><strong>utils/</strong>: Utilities like <code>wrapAsync</code>, global error middleware, and custom validators.</li>\n<li><strong>views/</strong>: The EJS-based UI templates (frontend visuals).</li>\n<li><strong>app.js</strong>: Server-side app configuration and route mounting.</li>\n<li><strong>package.json</strong>: Contains dependencies and CLI commands like <code>nodemon app.js</code>.</li>\n</ul>\n<h2>Q2: How the Attendance Flow Works</h2>\n<p>It starts from <code>controllers/attendance.js</code> where both Admin and Manager can use the <code>viewLog</code> module to view and approve employee attendance. It connects to the <code>models/attendance.js</code> to retrieve attendance schemas, then continues through <code>routes/attendance.js</code>, and finally renders in <code>attendance/log.ejs</code>. Both Admin and Manager can insert check-in/check-out times, and confirm pending attendance entries.</p>\n<h2>Q3: QR Code Flow</h2>\n<p>The logic begins in <code>controllers/attendance.js</code> → <code>scanQR</code> function. Admin/Manager generates and prints QR codes stored in <code>models/QRCode.js</code>. Routing is handled by <code>routes/attendance.js</code> and then rendered in <code>attendance/scan.ejs</code>. Each QR has a 24-hour expiration logic, preventing reuse or outdated attempts.</p>\n<h2>Q4: Role-Based Access Security</h2>\n<p>Access to the log page (<code>attendance/log</code>) is restricted by <code>isAuth.js</code> and <code>checkRole.js</code> middlewares. If any unauthorized users attempt to bypass, I’ll temporarily shut down the server and investigate. For stronger future protection, I plan to implement 2FA login and email verification.</p>\n<h2>Q5: Deployment Readiness</h2>\n<p>I have previously pushed and deployed frontend projects successfully using GitHub + Vercel with a <code>.com</code> domain. While backend/full stack deployment failed earlier due to no cloud-hosted DB, I plan to allocate budget for scalable DB services like MongoDB Atlas or Supabase for smooth deployment.</p>\n<h2>Q6 &#x26; Q7: Error Handling &#x26; Security Strategy</h2>\n<p>I implemented a global error handler (<code>errorHandler.js</code>) and <code>ExpressError</code> utility in <code>utils/</code>. In production environments, I plan to invest in security upgrades, scalable infrastructure, and proper alert systems. For extreme threats like DDoS attacks, I will shut down the server and audit everything from database, middleware logic, to access controls.</p>\n<hr>\n<p>🛡️ This simulation represents my real project navigation, done while having the source code opened live during the interview-style practice. Every answer was formed based on my understanding and hands-on implementation.</p>\n<hr>\n<p>🔙 Back to <a href=\"https://www.reltroner.com/blog\">Blog</a></p>\n<p>➡️ To <a href=\"https://www.reltroner.com/blog/for-recruiters\">For Recruiters &#x26; Collaborators</a></p>"
        },
        "_id": "blog/fullstack-interview-summary.md",
        "_raw": {
          "sourceFilePath": "blog/fullstack-interview-summary.md",
          "sourceFileName": "fullstack-interview-summary.md",
          "sourceFileDir": "blog",
          "contentType": "markdown",
          "flattenedPath": "blog/fullstack-interview-summary"
        },
        "type": "Blog",
        "slug": "fullstack-interview-summary"
      },
      "documentHash": "1744044738820",
      "hasWarnings": true,
      "documentTypeName": "Blog"
    }
  }
}
